#!/bin/bash

#
# TODO - save todo item in a popup window and add to todos.org
#


# ──────────────────────────────────────────────────────────
# Default Values

default_capture_file="$HOME"/org/todos.org
default_todo_tags="home"
capture_file="$default_capture_file"


# ──────────────────────────────────────────────────────────
# Parse Inputs

while getopts ":o:t:" opt; do
    case ${opt} in
		o) capture_file=$OPTARG
	       ;;
		t) tag_list+=($OPTARG)
	       ;;
		*) printf "Unrecognized option\n" >&2
	       ;;
    esac
done
shift $(( OPTIND - 1 ))


# ──────────────────────────────────────────────────────────
# Functions 

_set_up_file () {
	# Create file if it doesn't exist

    local msg=""
    
    if [[ ! -e $capture_file ]]
	then
		msg=$(printf "Todos file \"%s\" not found. " "$capture_file")
		msg+=$(printf "Using \"%s\".\n" "$default_capture_file")
		notify-send "todo" "$msg"
		capture_file="$default_capture_file"

		if [[ ! -e $capture_file ]]
		then
			msg=$(printf "Creating file \"%s\"" "$capture_file")
			notify-send "todo" "$msg"
			mkdir -p "${capture_file%/*}"
			echo "* Unfiled" >> "$capture_file"
		fi
    fi
    
}

_get_msg () {
	# Get message text

    title="Todo Item"
    prompt="Enter todo item text:"
    todo_text=$(zenity --entry --title="$title" --text="$prompt" 2>/dev/null)

    if [[ -z $todo_text ]]
	then
		notify-send "todo" "Aborted todo capture"
		exit 1
    fi

}

_get_tags () {
	# Get tag list

    local tags=""

    if [[ -n ${tag_list[*]} ]]
	then
		default_tag_text=${tag_list[*]}
    else
		default_tag_text=$default_todo_tags
    fi
    
    z_title="Todo Item Tags"
    z_text="Enter tags (space delimited)"
    tags=$(zenity --entry --title="$z_title" --text="$z_text"
		   --entry-text="$default_tag_text" 2>/dev/null)

    unset tag_list
    
    for tag in $tags
	do
		tag_list+=($tag)
    done
    
}

_format_tag_list () {
	# Format tags

    local old_IFS=""
    
    if [[ -n ${tag_list[*]} ]]
	then
		old_IFS=$IFS
		IFS=":"
		todo_tags=":${tag_list[*]}:"
		IFS=$old_IFS
    fi
    
}

_format_msg () {
	# Format todo item

    timestamp_long=$(date "+[%Y-%m-%d %a %H:%M]")
    todo_headline=$(printf "* todo [#A] %s %s" "$todo_text" "$todo_tags")
    todo_props=$(printf "  :properties:\n  :created:  %s\n  :end:" "$timestamp_long")
    todo_item=$(printf "%s\n%s" "$todo_headline" "$todo_props")
    
}


# ──────────────────────────────────────────────────────────
# Main 

_main () {
    
    _set_up_file
    _get_msg
    _get_tags
    _format_tag_list
    _format_msg

    echo "$todo_item" >> "$capture_file"
    notify-send "Saved item to $capture_file" "$todo_text"

}


_main

#!/usr/bin/env python
"""
    SC - Create directory shortcuts stored in ${HOME}/sc.txt

        Usage:
            sc [command] [alias] [dir]   -> general form
            sc                           -> display this help
            sc list                      -> print all saved aliases
            sc save src ~/Documents/src  -> create new alias "src"
            sc src                       -> go to directory saved as "src"

        Commands:
            save   (add)                 -> add alias to cache
            remove (rm|rem|d|del|delete) -> remove alias from cache
            list   (show|ls)             -> show cache
            <none> [alias]               -> go to dir specified by alias
"""

import os
import sys
import csv


def save_shortcuts(sc_file, shortcuts):
    """
    SAVE_SHORTCUTS

        Write list-of-lists "shortcuts" to text file "sc_file"
    """

    shortcuts.sort()
    try:
        with open(sc_file, "wb+") as sc_cache:
            csv_writer = csv.writer(sc_cache)
            csv_writer.writerows(shortcuts)

    except IOError:
        print("Creating new file: \"{}\".".format(sc_file))


def load_shortcuts(sc_file):
    """
    load_shortcuts: Load list-of-lists "shortcuts" from a file.

    :param list sc_file: file containing shortcuts
    """

    try:
        with open(sc_file, "r") as sc_cache:
            csv_reader = csv.reader(sc_cache, delimiter=",")
            shortcuts = list(csv_reader)

    except IOError:
        print("Shortcuts file \"{}\" not found".format(sc_file))
        shortcuts = [["Shortcuts", "Directories"]]
        save_shortcuts(sc_file, shortcuts)

    return shortcuts


def main():
    """
    MAIN

        Perform an action on list-of-lists "shortcuts"
    """

    # PARSE INPUTS
    argc = len(sys.argv)
    default_args = ["ls", None, os.getcwd()]
    cmd, alias, directory = sys.argv[1:argc] + default_args[argc - 1:]

    # LOAD SHORTCUTS
    sc_file = os.environ["HOME"] + "/sc.txt"
    shortcuts = load_shortcuts(sc_file)

    # ACTIONS
    if cmd in ["save", "add"]:
        if alias is None:
            print("Please set an alias (None specified)")
            sys.exit(1)

        a_mask = [alias in entry for entry in shortcuts]
        if any(a_mask):
            a_idx = a_mask.index(True)
            shortcuts[a_idx][1] = directory

        else:
            shortcuts.append([alias, directory])

        save_shortcuts(sc_file, shortcuts)

    elif cmd in ["rm", "rem", "remove", "d", "del", "delete"]:
        a_mask = [alias in entry for entry in shortcuts]
        try:
            a_idx = a_mask.index(True)
            del shortcuts[a_idx]
            save_shortcuts(sc_file, shortcuts)

        except ValueError:
            print("Alias \"{}\" does not exist".format(alias))
            sys.exit(1)

    elif cmd in ["ls", "list", "show"]:
        for shortcut in shortcuts:
            shortcut[1] = shortcut[1].replace(os.environ["HOME"], "~")
            print("{}".format(shortcut))

    else:
        alias = cmd
        a_mask = [alias in entry for entry in shortcuts]

        if not any(a_mask):
            print("Alias \"{}\" does not exist".format(alias))

        else:
            a_idx = a_mask.index(True)
            a_path = shortcuts[a_idx][1]

            if "TMUX" in os.environ:
                go_str = "tmux send -t . \"pushd " + a_path + "\" ENTER"
                os.system(go_str)

            else:
                go_str = "tmux new -s " + alias + " \\; send -t " + \
                         alias + " \"pushd " + a_path + "\" ENTER"
                os.system(go_str)


if __name__ == "__main__":
    main()

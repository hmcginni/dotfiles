#!/bin/bash


# Don't install files matching the following regexes (space delimited)
#   1. README files
#   2. .bashrc
#   3. temp files (ends with # or ~)
except="README.* .bashrc .*[#~]+"


# Get path to repo
installer=$(realpath "$0")
installerPath=$(dirname "$installer")
repoPath=${installerPath%/*}


# Set up map between source path and destination path
# associative_array[$srcPath]=$destPath
declare -A srcToDestMap
srcToDestMap["$repoPath/bash/bin"]="$HOME"/bin
srcToDestMap["$repoPath/python"]="$HOME"/bin
srcToDestMap["$repoPath/bash/lib"]="$HOME"/lib/bash
srcToDestMap["$repoPath/matlab"]="$HOME"/Documents/MATLAB
srcToDestMap["$repoPath/dots"]="$HOME"
srcToDestMap["$repoPath/emacs"]="$HOME"/.emacs.d
srcToDestMap["$repoPath/config/fontconfig"]="$HOME"/.config/fontconfig
srcToDestMap["$repoPath/config/gtk"]="$HOME"/.config/gtk-3.0


# Make destination directories
mkdir -p "${srcToDestMap[@]}"


# Enable dotfile globbing
shopt -s dotglob


# Create Regex string based on file exception rules
exceptRegex=$(tr -s "[:blank:]" "|" <<< $except)


# For each file in $srcPath, create a symlink in the respective $destPath
# if one does not already exist
for src in "${!srcToDestMap[@]}"; do
    for file in "$src"/*; do
	if [[ ! $file =~ ($exceptRegex) ]]; then
	    dest=${srcToDestMap["$src"]}
	    if [[ ! -e $dest/${file##*/} ]]; then
		ln -sv -t "$dest" "$file"
		# printf "\"%s\" -> \"%s\"\n" "$dest/${file##*/}" "$file"
	    fi
	fi
    done
done


# Disable dotfile globbing
shopt -u dotglob


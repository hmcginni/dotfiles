#!/bin/bash
#
# Get desktop resolutions and offsets using xrandr
#
#   desk -n       :: print number of desktops
#   desk -d1 -r   :: print desktop 1 resolution
#   desk -d3 -ro  :: print desktop 2 resolution and offset
#   desk -a       :: print number of desktops and desktop
#                        1,2, and 3 resolution and offset
#
#   Dependencies: xrandr


usage () {

    printf "\tUsage: \n\t  desk [-n(umdesks)][-r(es)][-o(ff)][-a(ll)][-d desktop]\n"
	exit
	
}

error () {

	message=$1
	
	printf "\n\tError on line: %s\n\t%s\n\n" "${BASH_LINENO[0]}" "$message" >&2
	usage
	exit 1
	
}


# ──────────────────────────────────────────────────────────
# Parse Inputs

if [[ $# == 0 ]]
then
	error "No inputs provided."
fi


while getopts ":hnroad:" opt
do
    case ${opt} in
	h )
	    echo -e "\n\tHelp for desk\n"
	    usage
	    ;;
	n )
	    prDesks=true
	    ;;
	r )
	    prRes=true
	    ;;
	o )
	    prOffset=true
	    ;;
	a )
	    prOffset=true
	    prRes=true
	    prDesks=true
	    ;;
	d )
	    desktop=$OPTARG
	    ;;
	* )
	    error "Unrecognized option."
	    ;;
    esac
done
shift $(( OPTIND - 1 ))


# ──────────────────────────────────────────────────────────
# Parse xrandr


displays=$(xrandr --current | egrep "[0-9]+?x[0-9]+?\+[0-9]+?\+[0-9]+?")
deskInfo=$(sed "s|\<primary\>||g" <<< "$displays" | awk '{print $3}')
numDesks=$(wc -l <<< "$deskInfo")
res=$(tr "\n" " " <<< $(sed -r 's|\+\w+||g' <<< "$deskInfo"))
# res=($(cut -d"x" -f1 <<< "$resStr"))
# res+=($(cut -d"x" -f2 <<< "$resStr"))
offset=$(tr "\n" " " <<< $(sed -r 's|\w+x\w+\+||g' <<< "$deskInfo"))


# ──────────────────────────────────────────────────────────
# Outputs


if [[ -n $desktop ]]
then
    if [[ $desktop > $numDesks ]]
	then
		error "Invalid Desktop number requested."
    fi

    res=$(cut -d" " -f"$desktop" <<< $res)
    offset=$(cut -d" " -f"$desktop" <<< $offset)
fi

res=$(sed 's|x| |g' <<< $res)
offset=$(sed 's|+| |g' <<< $offset)

${prDesks:-false} && echo "$numDesks"
${prRes:-false} && echo "$res"
${prOffset:-false} && echo "$offset"

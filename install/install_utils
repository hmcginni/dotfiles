#!/bin/bash


# Get path to repo
installer=$(realpath "$0")
installerPath=$(dirname "$installer")
repoPath=${installerPath%/*}


# Can't use associative arrays here because of some bizarre behavior when similar
# strings are used as "keys"
destPath=("$HOME/bin")
destPath+=("$HOME/bin")
destPath+=("$HOME/lib/bash")
destPath+=("$HOME/Documents/MATLAB")
destPath+=("$HOME")
destPath+=("$HOME/.emacs.d")
srcPath=("$repoPath/bash/bin")
srcPath+=("$repoPath/python")
srcPath+=("$repoPath/bash/lib")
srcPath+=("$repoPath/matlab")
srcPath+=("$repoPath/dots")
srcPath+=("$repoPath/emacs")


# Don't install files with following regex (space delimited)
#   1. README files
#   2. .bashrc
#   3. temp files (ends with # or ~)
except="README.* .bashrc .*[#~]+"
exceptRegex=$(tr -s "[:blank:]" "|" <<< $except)


# Make destination directories
mkdir -p "${destPath[@]}"


# Enable dotfile globbing
shopt -s dotglob


# Create array index iteration variable
idxSeq=$(seq 0 $(( ${#destPath[@]} - 1 )))


# For each file in $srcPath, create a symlink in the respective $destPath
# if one does not already exist
for idx in $idxSeq; do
    for fullfile in "${srcPath[$idx]}"/*; do
    	if [[ ! $fullfile =~ ($exceptRegex) ]]; then
	    destDir="${destPath[$idx]}"
	    if [[ ! -e $destDir/${fullfile##*/} ]]; then
		ln -sv -t "$destDir" "$fullfile"
		# printf "\"%s\" -> \"%s\"\n" "$fullfile" "$destDir/${fullfile##*/}"
	    fi
    	fi
    done
done


# Disable dotfile globbing
shopt -u dotglob


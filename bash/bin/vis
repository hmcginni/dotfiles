#!/bin/bash
#
# List visible (non-minimized) window IDs
#
#   vis -d1  :: print IDs of windows visible on desktop 1
#
################################################################################


# ──────────────────────────────────────────────────────────
# Utility Functions


source ~/lib/bash/tiling
source ~/lib/bash/utils

function usage()
{
    printf "\tUsage: \n\t  vis [-h][-i][-n][-d DESKTOP]\n"
}

function err()
{
    usage
    utils.errorf "\n\t%s\n\tError on line: ${BASH_LINENO[0]}\n" "$1"
}

# ──────────────────────────────────────────────────────────
# Defaults


desktop=$(tiling.getCursorDesktop)


# ──────────────────────────────────────────────────────────
# Parse Inputs


while getopts ":hd:" opt; do
    case ${opt} in
		h )
			echo -e "\tHelp for vis"
			usage
			exit
			;;
		d )
			desktop=$OPTARG
			;;
		* )
			err	"Unrecognized option"
			;;
    esac
done
shift $(( OPTIND - 1 ))


# ──────────────────────────────────────────────────────────
# Find all visible windows


declare -a pnotile_array

# (1) Get all PIDs for exempt applications and add them to an array
for proc in compiz xfce4-notifyd nemo-desktop
do
    pnotile=$(pgrep "$proc")
	if [[ -n $pnotile ]]
	then
		nproc=$(wc -w <<< "$pnotile")
		if (( nproc > 1 ))
		then
			for idx in $(seq 1 "$nproc")
			do
				pnotile_array+=($(cut -d$'\n' -f"$idx" <<< "$pnotile"))
			done
		else
			pnotile_array+=("$pnotile")
		fi
	fi
done

if [[ -n ${pnotile_array[*]} ]]
then
	pnotile_array+=($(pgrep nautilus)".*Desktop")
else
	pnotile_array=("No Matches")
fi

# (2) Convert array to "|" delimited string 
old_IFS=$IFS
IFS='|'
pnotile_regex=$(tr -s "|" "|" <<< "${pnotile_array[*]}")
IFS=${old_IFS}

# (3) Use (2) as regex specification for egrep (in other words, find all lines
#     that don't include any of the PIDs for the specified applications)
allWIDs=$(wmctrl -lp | egrep -v "($pnotile_regex)" | awk '{print $1}')
for thisWID in $allWIDs; do
    if [[ $(xwininfo -wm -id "$thisWID" | grep "Hidden") == "" ]]; then
		visWIDs+=("$thisWID")
    fi
done


# ──────────────────────────────────────────────────────────
# Find visible windows on specified desktop


res=($(desk -r -d"$desktop"))
off=($(desk -o -d"$desktop"))

for thisWID in "${visWIDs[@]}"; do
    corner=($(wmctrl -lG | grep "$thisWID" | awk '{print $3,$4}'))
    width=$(wmctrl -lG | grep "$thisWID" | awk '{print $5}')
    wInBound=$(( corner[0] + width > 0 ))
    if (( corner[0] < 0 )); then
    	corner[0]=0
    fi
    xInBound=$(( corner[0] < res[0] + off[0] && corner[0] >= off[0] ))
    yInBound=$(( corner[1] < res[1] + off[1] && corner[1] >= off[1] ))
    if (( xInBound && yInBound && wInBound )); then
		deskVisWIDs+=("$thisWID")
    fi
done

echo "${deskVisWIDs[@]}"


# ──────────────────────────────────────────────────────────
# END
